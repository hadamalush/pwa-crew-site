@import "../../../styles/transitions/variables";
@import "../../../styles/mixins/mixins";

.header {
	display: grid;
	grid-template-columns: 1fr 2fr 1fr;
	grid-template-rows: 1fr 1fr;
	position: absolute;
	z-index: 1000;
	width: 100%;
	max-width: 250rem;
	height: 7rem;
	margin: 0 auto;
	background-color: $background-nav;

	&::after {
		content: "";
		@include position(absolute, 0, -500rem, 0, -500rem, -1);
		box-shadow: $boxshadow-primary;
		background-color: $background-nav;
	}

	&__logo {
		margin: 0 auto;
		grid-column: 1/2;
		grid-row: 1/3;
		font-size: 3rem;
		align-items: center;

		h2 {
			font-size: 2rem;
		}
	}

	&__nav {
		display: none;
		grid-column: 2/4;
		grid-row: 1/3;
		font-size: 1.6rem;
	}

	&__avatar {
		@include position(absolute, 50%, 2em);
		transform: translateY(-50%);
		object-fit: cover;
		object-position: center;
		border-radius: 50%;
		box-shadow: $boxshadow-quinary;
		cursor: pointer;
	}

	.header &__glob,
	.header &__theme-switcher {
		@include position(absolute, 50%, 0);
		@include flex(row, center, center);
		width: 5rem;
		height: 100%;
		transform: translateY(-50%);
		transition: opacity 0.3s, color 0.3s;
		cursor: pointer;

		&:hover {
			color: $secondary-color;
		}

		svg {
			width: 2rem;
			height: 100%;
		}

		&:hover + ul {
			opacity: 1;
			transform: scale(1);
		}
	}

	.header &__theme-switcher {
		right: 5rem;
	}

	&__leanguages {
		@include position(absolute, null, 0, -7rem);
		width: 5rem;
		height: 7rem;
		transform: scale(1, 0);
		transform-origin: top;
		transition: opacity 0.3s, transform 0.3s;
		opacity: 0;
		box-shadow: $boxshadow-senary;
		background-color: $background-nav;

		:first-child::after {
			@include position(absolute, null, null, 0);
			content: "";
			width: 50%;
			height: 1px;
			background-color: $primary-color;
		}
		&-item {
			@include flex(row, null, center);
			position: relative;
			align-items: center;
			height: 50%;
			font-size: 1.6rem;
			transition: color 0.3s;
			cursor: pointer;

			&:hover {
				color: $secondary-color;
			}

			&--active {
				color: $secondary-color;
			}
		}

		&:hover {
			opacity: 1;
			transform: scale(1);
		}
	}

	@include media-query(mediumScreen) {
		@include position(fixed, 0, 50%, null, null, 1000);
		transform: translateX(50%);
		grid-template-columns: 1fr 1fr 3fr 10rem;
		grid-template-rows: 1fr 1fr;

		.header &__theme-switcher {
			right: 15rem;

			svg {
				width: 3rem;
			}
		}

		.header &__glob {
			right: 10rem;

			&--right {
				right: 2rem;
			}

			svg {
				width: 3rem;
			}
		}

		&__leanguages {
			right: 10rem;

			&--right {
				right: 2rem;
			}
		}

		&__logo {
			grid-row: 1/3;
		}

		&__nav {
			display: flex;
			margin-left: 2%;
		}
	}

	@include media-query(largeScreen) {
		&__nav {
			justify-content: center;
		}
	}

	@include media-query(x-largeScreen) {
		&__logo {
			h2 {
				font-size: 3rem;
			}
		}

		&__nav {
			padding-right: 20%;
		}
	}

	@include media-query(xx-largeScreen) {
		&__nav {
			font-size: 1.8rem;
		}
	}
}

.header__loading {
	@include position(fixed, null, 0, 0, null, 980);
	@include flex(row, center, center);
	height: 6.2rem;
	content: "";
	width: 100vw;
	padding-right: 5rem;
	font-size: 1.4rem;
	font-weight: bold;
	transform: skew(0);
	transition: opacity 0.3s;
}

.rotating-border {
	--border-size: 0.5rem;
	--padding: 1rem;
	--border-radius: 0.2rem;
	position: fixed;
	display: inline-block;
	overflow: hidden;
	padding: calc(var(--padding) + var(--border-size));
	border-radius: var(--border-radius);

	&::before {
		@include position(fixed, 50%, null, null, 50%, -2);
		content: "";
		display: block;
		width: calc(100% * 1.41421356237);
		padding-bottom: calc(100% * 1.41421356237);
		transform: translate(-50%, -50%);
		border-radius: 100%;
		animation: spin 3s linear infinite;
		background: $bgc-animation;
	}
	&--reverse::before {
		animation-direction: reverse;
	}
	&::after {
		content: "";
		position: fixed;
		inset: var(--border-size);
		z-index: -1;
		border-radius: calc(var(--border-radius) - var(--border-size));
		background: rgba(14, 14, 14, 0.9);
	}
}

@include media-query(mediumScreen) {
	.header__loading {
		@include position(fixed, 0, 0, null, null, 980);
		height: 7.3rem;

		&::before {
			animation: spin-reverse 3s linear infinite;
		}
	}
}

@keyframes spin {
	from {
		transform: translate(-50%, -50%) rotate(0);
	}
	to {
		transform: translate(-50%, -50%) rotate(360deg);
	}
}

@keyframes spin-reverse {
	from {
		transform: translate(-50%, -50%) rotate(0);
	}
	to {
		transform: translate(-50%, -50%) rotate(-360deg);
	}
}
